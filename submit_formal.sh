#!/bin/bash

#SBATCH --gres=gpu:1
#SBATCH --mem=20G    # Memory in MB per cpu allocated

##SBATCH --time=07-00:00      # Runtime in D-HH:MM

model_name=$1
exp_name=$2
task=$3
seed=$4

lr_array=( 1 2 3 4 5 7 )
#lr_array=( 1 2 3 5 )
#lr_array=( 4 7 )


#common_para="warmup_ratio = 0.2, max_grad_norm = 1.0, weight_decay=1e-6, pool_type=proj_avg_train, "
#common_name="warmup02_clip1_l2_e-6_proj_avg_train_correct"
#common_para="warmup_ratio = 0.2, max_grad_norm = 1.0, weight_decay=1e-6, pool_type=first_init, "
#common_name="warmup02_clip1_l2_e-6_first_init"
common_para="warmup_ratio = 0.1, max_grad_norm = 1.0, pool_type=proj_avg_train, "
common_name="warmup01_clip1_proj_avg_train_correct"
#common_para="warmup_ratio = 0.1, max_grad_norm = 1.0, pool_type=first_init, "
#common_name="warmup01_clip1_first_init"
#common_para="warmup_ratio = 0.1, max_grad_norm = 1.0, pool_type=single_first, "
#common_name="warmup01_clip1_single_first"


if [[ "$exp_name" == "mf+mlm" ]]; then
    for lr_v in "${lr_array[@]}"
    do
        #python -m olfmlm.evaluate.main --exp_name $exp_name --overrides "run_name = ${model_name}_${lr_v}, pretrain_tasks = ${task}, target_tasks = ${task}, lr=${lr_v}e-5, batch_size=16, few_shot = -1, max_epochs = 20, pooler_dropout = 0, pool_type=first_init, random_seed = ${seed}, run_name_suffix = pdrop0_e20:s${seed}:lr"
        #python -m olfmlm.evaluate.main --exp_name $exp_name --overrides "run_name = ${model_name}_${lr_v}, pretrain_tasks = ${task}, target_tasks = ${task}, lr=${lr_v}e-5, batch_size=16, few_shot = -1, max_epochs = 20, pooler_dropout = 0, pool_type=first, random_seed = ${seed}, run_name_suffix = adam_warmup01_first_e20:s${seed}:lr"
        #python -m olfmlm.evaluate.main --exp_name $exp_name --checkpoint 1 --overrides "run_name = ${model_name}_${lr_v}, pretrain_tasks = ${task}, target_tasks = ${task}, lr=${lr_v}e-5, batch_size=16, few_shot = -1, max_epochs = 20, pooler_dropout = 0, pool_type=proj_avg_train, random_seed = ${seed}, run_name_suffix = adam_warmup01_proj_avg_train_correct_e20_ck1:s${seed}:lr"
        #python -m olfmlm.evaluate.main --exp_name $exp_name --overrides "run_name = ${model_name}_${lr_v}, warmup_ratio = 0.2, pretrain_tasks = ${task}, target_tasks = ${task}, lr=${lr_v}e-5, batch_size=16, few_shot = -1, max_epochs = 20, pooler_dropout = 0, pool_type=proj_avg_train, random_seed = ${seed}, run_name_suffix = adam_warmup02_proj_avg_train_correct_e20:s${seed}:lr"
        python -m olfmlm.evaluate.main --exp_name $exp_name --overrides "run_name = ${model_name}_${lr_v}, $common_para pretrain_tasks = ${task}, target_tasks = ${task}, lr=${lr_v}e-5, batch_size=16, few_shot = -1, max_epochs = 20, pooler_dropout = 0, random_seed = ${seed}, run_name_suffix = adam_${common_name}_e20:s${seed}:lr"
        #python -m olfmlm.evaluate.main --exp_name $exp_name --overrides "run_name = ${model_name}_${lr_v}, pretrain_tasks = ${task}, target_tasks = ${task}, lr=${lr_v}e-5, batch_size=16, few_shot = -1, max_epochs = 20, pooler_dropout = 0, pool_type=proj_avg_train, random_seed = ${seed}, run_name_suffix = adam_warmup01_proj_avg_train_correct_e20:s${seed}:lr"
        #python -m olfmlm.evaluate.main --exp_name $exp_name --overrides "run_name = ${model_name}_${lr_v}, pretrain_tasks = ${task}, target_tasks = ${task}, lr=${lr_v}e-5, batch_size=16, few_shot = -1, max_epochs = 20, pooler_dropout = 0, pool_type=proj_avg_train_skip, random_seed = ${seed}, run_name_suffix = adam_warmup01_proj_avg_train_correct_e20_skip:s${seed}:lr"
        #python -m olfmlm.evaluate.main --exp_name $exp_name --overrides "run_name = ${model_name}_${lr_v}, pretrain_tasks = ${task}, target_tasks = ${task}, lr=${lr_v}e-5, batch_size=16, few_shot = -1, max_epochs = 20, pooler_dropout = 0, pool_type=lin, random_seed = ${seed}, run_name_suffix = adam_warmup01_lin_e20:s${seed}:lr"
        #python -m olfmlm.evaluate.main --exp_name $exp_name --overrides "run_name = ${model_name}_${lr_v}, pretrain_tasks = ${task}, target_tasks = ${task}, lr=${lr_v}e-5, batch_size=16, few_shot = -1, max_epochs = 20, pooler_dropout = 0, pool_type=facet_mean, random_seed = ${seed}, run_name_suffix = adam_warmup01_mean_e20:s${seed}:lr"
        #python -m olfmlm.evaluate.main --exp_name $exp_name --overrides "run_name = ${model_name}_${lr_v}, pretrain_tasks = ${task}, target_tasks = ${task}, lr=${lr_v}e-5, batch_size=16, few_shot = -1, max_epochs = 20, pooler_dropout = 0, pool_type=first_init_avg, random_seed = ${seed}, run_name_suffix = adam_warmup01_pdrop0_avg_e20:s${seed}:lr"
    done

#python -m olfmlm.evaluate.main --exp_name $exp_name --overrides "run_name = "${1}_3", lr=2e-5, batch_size=16, few_shot = -1, max_epochs = 20, pooler_dropout = 0, random_seed = 1020, run_name_suffix = pdrop0_e20_s1k2"
#python -m olfmlm.evaluate.main --exp_name $exp_name --overrides "run_name = "${1}_4", lr=1e-5, batch_size=16, few_shot = -1, max_epochs = 20, pooler_dropout = 0, random_seed = 1020, run_name_suffix = pdrop0_e20_s1k2"
#python -m olfmlm.evaluate.main --exp_name $exp_name --overrides "run_name = "${1}_2", lr=3e-5, batch_size=16, few_shot = -1, max_epochs = 20, pooler_dropout = 0, random_seed = 1020, run_name_suffix = pdrop0_e20_s1k2"
#python -m olfmlm.evaluate.main --exp_name $exp_name --overrides "run_name = "${1}_1", lr=5e-5, batch_size=16, few_shot = -1, max_epochs = 20, pooler_dropout = 0, random_seed = 1020, run_name_suffix = pdrop0_e20_s1k2"

#python -m olfmlm.evaluate.main --exp_name $exp_name --overrides "run_name = "${1}_3", lr=2e-5, batch_size=16, few_shot = -1, max_epochs = 20, pooler_dropout = 1, pool_type=first_init_avg, run_name_suffix = pdrop1_ep20_bz16_avg"
#python -m olfmlm.evaluate.main --exp_name $exp_name --overrides "run_name = "${1}_4", lr=1e-5, batch_size=16, few_shot = -1, max_epochs = 20, pooler_dropout = 1, pool_type=first_init_avg, run_name_suffix = pdrop1_ep20_bz16_avg"
#python -m olfmlm.evaluate.main --exp_name $exp_name --overrides "run_name = "${1}_2", lr=3e-5, batch_size=16, few_shot = -1, max_epochs = 20, pooler_dropout = 1, pool_type=first_init_avg, run_name_suffix = pdrop1_ep20_bz16_avg"
#python -m olfmlm.evaluate.main --exp_name $exp_name --overrides "run_name = "${1}_1", lr=5e-5, batch_size=16, few_shot = -1, max_epochs = 20, pooler_dropout = 1, pool_type=first_init_avg, run_name_suffix = pdrop1_ep20_bz16_avg"

#python -m olfmlm.evaluate.main --exp_name $exp_name --overrides "run_name = "${1}_3", lr=2e-5, batch_size=16, few_shot = -1, max_epochs = 10, pooler_dropout = 1, pool_type=first_init_1, run_name_suffix = pdrop1_bz16_i1"
#python -m olfmlm.evaluate.main --exp_name $exp_name --overrides "run_name = "${1}_4", lr=1e-5, batch_size=16, few_shot = -1, max_epochs = 10, pooler_dropout = 1, pool_type=first_init_1, run_name_suffix = pdrop1_bz16_i1"
#python -m olfmlm.evaluate.main --exp_name $exp_name --overrides "run_name = "${1}_2", lr=3e-5, batch_size=16, few_shot = -1, max_epochs = 10, pooler_dropout = 1, pool_type=first_init_1, run_name_suffix = pdrop1_bz16_i1"
#python -m olfmlm.evaluate.main --exp_name $exp_name --overrides "run_name = "${1}_1", lr=5e-5, batch_size=16, few_shot = -1, max_epochs = 10, pooler_dropout = 1, run_name_suffix = pdrop1_bz16"
#python -m olfmlm.evaluate.main --exp_name $exp_name --overrides "run_name = "${1}_5", lr=1.5e-5, batch_size=16, few_shot = -1, max_epochs = 10, pooler_dropout = 1, run_name_suffix = pdrop1"

elif [[ "$exp_name" == "mf+mlm_few" ]]; then
    for lr_v in "${lr_array[@]}"
    do
        #python -m olfmlm.evaluate.main --exp_name $exp_name --overrides "run_name = ${model_name}_${lr_v}, pretrain_tasks = ${task}, target_tasks = ${task}, lr=${lr_v}e-5, batch_size=8, few_shot = 1000, max_epochs = 20, pooler_dropout = 0, pool_type=first_init, random_seed = ${seed}, run_name_suffix = adam_warmup01_pdrop0_e20:s${seed}:lr"
        #python -m olfmlm.evaluate.main --exp_name $exp_name --overrides "run_name = ${model_name}_${lr_v}, pretrain_tasks = ${task}, target_tasks = ${task}, lr=${lr_v}e-5, batch_size=8, few_shot = 1000, max_epochs = 20, pooler_dropout = 1, pool_type=first_init, random_seed = ${seed}, run_name_suffix = adam_warmup01_pdrop1_e20:s${seed}:lr"
        #python -m olfmlm.evaluate.main --exp_name $exp_name --overrides "run_name = ${model_name}_${lr_v}, pretrain_tasks = ${task}, target_tasks = ${task}, lr=${lr_v}e-5, batch_size=8, few_shot = 1000, max_epochs = 20, pooler_dropout = 0, pool_type=first, random_seed = ${seed}, run_name_suffix = adam_warmup01_first_e20:s${seed}:lr"
        #python -m olfmlm.evaluate.main --exp_name $exp_name --checkpoint 1 --overrides "run_name = ${model_name}_${lr_v}, pretrain_tasks = ${task}, target_tasks = ${task}, lr=${lr_v}e-5, batch_size=8, few_shot = 1000, max_epochs = 20, pooler_dropout = 0, pool_type=proj_avg_train, random_seed = ${seed}, run_name_suffix = adam_warmup01_proj_avg_train_correct_e20_ck1:s${seed}:lr"
        #python -m olfmlm.evaluate.main --exp_name $exp_name --overrides "run_name = ${model_name}_${lr_v}, warmup_ratio = 0.2, pretrain_tasks = ${task}, target_tasks = ${task}, lr=${lr_v}e-5, batch_size=8, few_shot = 1000, max_epochs = 20, pooler_dropout = 0, pool_type=proj_avg_train, random_seed = ${seed}, run_name_suffix = adam_warmup02_proj_avg_train_correct_e20:s${seed}:lr"
        python -m olfmlm.evaluate.main --exp_name $exp_name --overrides "run_name = ${model_name}_${lr_v}, $common_para pretrain_tasks = ${task}, target_tasks = ${task}, lr=${lr_v}e-5, batch_size=8, few_shot = 1000, max_epochs = 20, pooler_dropout = 0, random_seed = ${seed}, run_name_suffix = adam_${common_name}_e20:s${seed}:lr"
        #python -m olfmlm.evaluate.main --exp_name $exp_name --overrides "run_name = ${model_name}_${lr_v}, pretrain_tasks = ${task}, target_tasks = ${task}, lr=${lr_v}e-5, batch_size=8, few_shot = 1000, max_epochs = 20, pooler_dropout = 0, pool_type=proj_avg_train, random_seed = ${seed}, run_name_suffix = adam_warmup01_proj_avg_train_correct_e20:s${seed}:lr"
        #python -m olfmlm.evaluate.main --exp_name $exp_name --overrides "run_name = ${model_name}_${lr_v}, pretrain_tasks = ${task}, target_tasks = ${task}, lr=${lr_v}e-5, batch_size=8, few_shot = 1000, max_epochs = 20, pooler_dropout = 0, pool_type=proj_avg_train_skip, random_seed = ${seed}, run_name_suffix = adam_warmup01_proj_avg_train_correct_e20_skip:s${seed}:lr"
        #python -m olfmlm.evaluate.main --exp_name $exp_name --overrides "run_name = ${model_name}_${lr_v}, pretrain_tasks = ${task}, target_tasks = ${task}, lr=${lr_v}e-5, batch_size=8, few_shot = 1000, max_epochs = 20, pooler_dropout = 0, pool_type=lin, random_seed = ${seed}, run_name_suffix = adam_warmup01_lin_e20:s${seed}:lr"
        #python -m olfmlm.evaluate.main --exp_name $exp_name --overrides "run_name = ${model_name}_${lr_v}, pretrain_tasks = ${task}, target_tasks = ${task}, lr=${lr_v}e-5, batch_size=8, few_shot = 1000, max_epochs = 20, pooler_dropout = 0, pool_type=facet_mean, random_seed = ${seed}, run_name_suffix = adam_warmup01_mean_e20:s${seed}:lr"
        #python -m olfmlm.evaluate.main --exp_name $exp_name --overrides "run_name = ${model_name}_${lr_v}, pretrain_tasks = ${task}, target_tasks = ${task}, lr=${lr_v}e-5, batch_size=8, few_shot = 1000, max_epochs = 20, pooler_dropout = 0, pool_type=first_init_avg, random_seed = ${seed}, run_name_suffix = adam_warmup01_pdrop0_avg_e20:s${seed}:lr"
    done
    
#python -m olfmlm.evaluate.main --exp_name $exp_name --overrides "run_name = "${1}_3", lr=2e-5, batch_size=8, max_epochs = 20, few_shot = 1000, pooler_dropout = 1, run_name_suffix = no_drop"
#python -m olfmlm.evaluate.main --exp_name $exp_name --overrides "run_name = "${1}_2", lr=3e-5, batch_size=8, max_epochs = 20, few_shot = 1000, pooler_dropout = 1, run_name_suffix = no_drop"
#python -m olfmlm.evaluate.main --exp_name $exp_name --overrides "run_name = "${1}_1", lr=5e-5, batch_size=8, max_epochs = 20, few_shot = 1000, pooler_dropout = 1, run_name_suffix = no_drop"
elif [[ "$exp_name" == "mf+mlm_few_noise" ]]; then
    for lr_v in "${lr_array[@]}"
    do
        #python -m olfmlm.evaluate.main --exp_name $exp_name --overrides "run_name = ${model_name}_${lr_v}, pretrain_tasks = ${task}, target_tasks = ${task}, lr=${lr_v}e-5, batch_size=8, noise_ratio = 0.7, few_shot = 1000, max_epochs = 20, pooler_dropout = 0, pool_type=first, random_seed = ${seed}, run_name_suffix = adam_warmup01_first_e20_noise:s${seed}:lr"
        #python -m olfmlm.evaluate.main --exp_name $exp_name --checkpoint 1 --overrides "run_name = ${model_name}_${lr_v}, pretrain_tasks = ${task}, target_tasks = ${task}, lr=${lr_v}e-5, batch_size=8, noise_ratio = 0.7, few_shot = 1000, max_epochs = 20, pooler_dropout = 0, pool_type=proj_avg_train, random_seed = ${seed}, run_name_suffix = adam_warmup01_proj_avg_train_correct_e20_noise_ck1:s${seed}:lr"
        #python -m olfmlm.evaluate.main --exp_name $exp_name --overrides "run_name = ${model_name}_${lr_v}, warmup_ratio = 0.2, pretrain_tasks = ${task}, target_tasks = ${task}, lr=${lr_v}e-5, batch_size=8, noise_ratio = 0.7, few_shot = 1000, max_epochs = 20, pooler_dropout = 0, pool_type=proj_avg_train, random_seed = ${seed}, run_name_suffix = adam_warmup02_proj_avg_train_correct_e20_noise:s${seed}:lr"
        python -m olfmlm.evaluate.main --exp_name $exp_name --overrides "run_name = ${model_name}_${lr_v}, $common_para pretrain_tasks = ${task}, target_tasks = ${task}, lr=${lr_v}e-5, batch_size=8, noise_ratio = 0.7, few_shot = 1000, max_epochs = 20, pooler_dropout = 0, random_seed = ${seed}, run_name_suffix = adam_${common_name}_e20_noise:s${seed}:lr"
        #python -m olfmlm.evaluate.main --exp_name $exp_name --overrides "run_name = ${model_name}_${lr_v}, pretrain_tasks = ${task}, target_tasks = ${task}, lr=${lr_v}e-5, batch_size=8, noise_ratio = 0.7, few_shot = 1000, max_epochs = 20, pooler_dropout = 0, pool_type=proj_avg_train, random_seed = ${seed}, run_name_suffix = adam_warmup01_proj_avg_train_correct_e20_noise:s${seed}:lr"
        #python -m olfmlm.evaluate.main --exp_name $exp_name --overrides "run_name = ${model_name}_${lr_v}, pretrain_tasks = ${task}, target_tasks = ${task}, lr=${lr_v}e-5, batch_size=8, noise_ratio = 0.7, few_shot = 1000, max_epochs = 20, pooler_dropout = 0, pool_type=proj_avg_train_skip, random_seed = ${seed}, run_name_suffix = adam_warmup01_proj_avg_train_correct_e20_noise_skip:s${seed}:lr"
        #python -m olfmlm.evaluate.main --exp_name $exp_name --overrides "run_name = ${model_name}_${lr_v}, pretrain_tasks = ${task}, target_tasks = ${task}, lr=${lr_v}e-5, batch_size=8, noise_ratio = 0.7, few_shot = 1000, max_epochs = 20, pooler_dropout = 0, pool_type=lin, random_seed = ${seed}, run_name_suffix = adam_warmup01_lin_e20_noise:s${seed}:lr"
        #python -m olfmlm.evaluate.main --exp_name $exp_name --overrides "run_name = ${model_name}_${lr_v}, pretrain_tasks = ${task}, target_tasks = ${task}, lr=${lr_v}e-5, batch_size=8, noise_ratio = 0.7, few_shot = 1000, max_epochs = 20, pooler_dropout = 0, pool_type=facet_mean, random_seed = ${seed}, run_name_suffix = adam_warmup01_mean_e20_noise:s${seed}:lr"
        #python -m olfmlm.evaluate.main --exp_name $exp_name --overrides "run_name = ${model_name}_${lr_v}, pretrain_tasks = ${task}, target_tasks = ${task}, lr=${lr_v}e-5, batch_size=8, noise_ratio = 0.7, few_shot = 1000, max_epochs = 20, pooler_dropout = 0, pool_type=first_init_avg, random_seed = ${seed}, run_name_suffix = adam_warmup01_pdrop0_avg_e20_noise:s${seed}:lr"
    done

elif [[ "$exp_name" == "mf+mlm_super_glue" ]]; then
    for lr_v in "${lr_array[@]}"
    do
        #python -m olfmlm.evaluate.main --exp_name $exp_name --overrides "run_name = ${model_name}_${lr_v}, pretrain_tasks = ${task}, target_tasks = ${task}, lr=${lr_v}e-5, batch_size=4, few_shot = -1, max_epochs = 20, pooler_dropout = 1, pool_type=first_init, random_seed = ${seed}, run_name_suffix = pdrop1_e20:s${seed}:lr" -c superglue-bert.conf
        if [[ "${task}" == "superglue_record" ]]; then
            #python -m olfmlm.evaluate.main --exp_name $exp_name --overrides "run_name = ${model_name}_${lr_v}, pretrain_tasks = ${task}, target_tasks = ${task}, lr=${lr_v}e-5, batch_size=8, warmup_ratio = 0.01, few_shot = -1, max_epochs = 20, pooler_dropout = 0, pool_type=first_init_avg, random_seed = ${seed}, run_name_suffix = adam_warmup01_pdrop0_avg_e20:s${seed}:lr" -c superglue-bert.conf
            if [[ "${lr_v}" == 1 ]]; then
                #python -m olfmlm.evaluate.main --exp_name $exp_name --overrides "run_name = ${model_name}_1, pretrain_tasks = ${task}, target_tasks = ${task}, lr=1e-5, patience = 40, val_data_limit = 50000, target_train_max_vals = 400, batch_size=8, few_shot = -1, max_epochs = 20, pooler_dropout = 0, pool_type=first, random_seed = ${seed}, run_name_suffix = adam_warmup01_400_first_e20:s${seed}:lr" -c superglue-bert.conf
                #python -m olfmlm.evaluate.main --exp_name $exp_name --checkpoint 1 --overrides "run_name = ${model_name}_1, pretrain_tasks = ${task}, target_tasks = ${task}, lr=1e-5, patience = 40, val_data_limit = 50000, target_train_max_vals = 400, batch_size=8, few_shot = -1, max_epochs = 20, pooler_dropout = 0, pool_type=proj_avg_train, random_seed = ${seed}, run_name_suffix = adam_warmup01_400_proj_avg_train_e20_ck1:s${seed}:lr" -c superglue-bert.conf
                #python -m olfmlm.evaluate.main --exp_name $exp_name --overrides "run_name = ${model_name}_1, warmup_ratio = 0.2, pretrain_tasks = ${task}, target_tasks = ${task}, lr=1e-5, patience = 40, val_data_limit = 50000, target_train_max_vals = 400, batch_size=4, few_shot = -1, max_epochs = 20, pooler_dropout = 0, pool_type=proj_avg_train, random_seed = ${seed}, run_name_suffix = adam_warmup02_proj_avg_train_correct_e20_bsz4:s${seed}:lr" -c superglue-bert.conf
                python -m olfmlm.evaluate.main --exp_name $exp_name --overrides "run_name = ${model_name}_${lr_v}, $common_para pretrain_tasks = ${task}, target_tasks = ${task}, lr=${lr_v}e-5, patience = 80, val_data_limit = 40000, target_train_max_vals = 300, target_train_val_interval = 2000, batch_size=8, few_shot = -1, max_epochs = 20, pooler_dropout = 0, random_seed = ${seed}, run_name_suffix = adam_${common_name}_e20_bsz4:s${seed}:lr" -c superglue-bert.conf
                #python -m olfmlm.evaluate.main --exp_name $exp_name --overrides "run_name = ${model_name}_1, $common_para pretrain_tasks = ${task}, target_tasks = ${task}, lr=1e-5, patience = 40, val_data_limit = 50000, target_train_max_vals = 400, batch_size=4, few_shot = -1, max_epochs = 20, pooler_dropout = 0, random_seed = ${seed}, run_name_suffix = adam_${common_name}_e20_bsz4:s${seed}:lr" -c superglue-bert.conf
                #python -m olfmlm.evaluate.main --exp_name $exp_name --overrides "run_name = ${model_name}_1, pretrain_tasks = ${task}, target_tasks = ${task}, lr=1e-5, patience = 40, val_data_limit = 50000, target_train_max_vals = 400, batch_size=8, few_shot = -1, max_epochs = 20, pooler_dropout = 0, pool_type=proj_avg_train, random_seed = ${seed}, run_name_suffix = adam_warmup01_400_proj_avg_train_e20:s${seed}:lr" -c superglue-bert.conf
                #python -m olfmlm.evaluate.main --exp_name $exp_name --overrides "run_name = ${model_name}_1, pretrain_tasks = ${task}, target_tasks = ${task}, lr=1e-5, patience = 40, val_data_limit = 50000, target_train_max_vals = 400, batch_size=8, few_shot = -1, max_epochs = 20, pooler_dropout = 0, pool_type=proj_avg_train_skip, random_seed = ${seed}, run_name_suffix = adam_warmup01_400_proj_avg_train_e20_skip:s${seed}:lr" -c superglue-bert.conf
                #python -m olfmlm.evaluate.main --exp_name $exp_name --overrides "run_name = ${model_name}_1, pretrain_tasks = ${task}, target_tasks = ${task}, lr=1e-5, patience = 40, val_data_limit = 50000, target_train_max_vals = 400, batch_size=8, few_shot = -1, max_epochs = 20, pooler_dropout = 0, pool_type=lin, random_seed = ${seed}, run_name_suffix = adam_warmup01_400_lin_e20:s${seed}:lr" -c superglue-bert.conf
                #python -m olfmlm.evaluate.main --exp_name $exp_name --overrides "run_name = ${model_name}_1, pretrain_tasks = ${task}, target_tasks = ${task}, lr=1e-5, patience = 40, val_data_limit = 50000, target_train_max_vals = 400, batch_size=8, few_shot = -1, max_epochs = 20, pooler_dropout = 0, pool_type=facet_mean, random_seed = ${seed}, run_name_suffix = adam_warmup01_400_mean_e20:s${seed}:lr" -c superglue-bert.conf
                #python -m olfmlm.evaluate.main --exp_name $exp_name --overrides "run_name = ${model_name}_1, pretrain_tasks = ${task}, target_tasks = ${task}, lr=1e-5, patience = 40, val_data_limit = 50000, target_train_max_vals = 400, batch_size=8, few_shot = -1, max_epochs = 20, pooler_dropout = 0, pool_type=first_init_avg, random_seed = ${seed}, run_name_suffix = adam_warmup01_400_pdrop0_avg_e20:s${seed}:lr" -c superglue-bert.conf
            fi
        else
            #python -m olfmlm.evaluate.main --exp_name $exp_name --overrides "run_name = ${model_name}_${lr_v}, pretrain_tasks = ${task}, target_tasks = ${task}, lr=${lr_v}e-5, batch_size=4, target_train_max_vals = 400, few_shot = -1, max_epochs = 20, pooler_dropout = 0, pool_type=first, random_seed = ${seed}, run_name_suffix = adam_warmup01_first_e20:s${seed}:lr" -c superglue-bert.conf
            #python -m olfmlm.evaluate.main --exp_name $exp_name --checkpoint 1 --overrides "run_name = ${model_name}_${lr_v}, pretrain_tasks = ${task}, target_tasks = ${task}, lr=${lr_v}e-5, batch_size=4, target_train_max_vals = 400, few_shot = -1, max_epochs = 20, pooler_dropout = 0, pool_type=proj_avg_train, random_seed = ${seed}, run_name_suffix = adam_warmup01_proj_avg_train_correct_e20_ck1:s${seed}:lr" -c superglue-bert.conf
            #python -m olfmlm.evaluate.main --exp_name $exp_name --overrides "run_name = ${model_name}_${lr_v}, warmup_ratio = 0.3, pretrain_tasks = ${task}, target_tasks = ${task}, lr=${lr_v}e-5, batch_size=8, target_train_max_vals = 400, few_shot = -1, max_epochs = 20, pooler_dropout = 0, pool_type=proj_avg_train, random_seed = ${seed}, run_name_suffix = adam_warmup03_proj_avg_train_correct_e20_bsz8:s${seed}:lr" -c superglue-bert.conf
            #python -m olfmlm.evaluate.main --exp_name $exp_name --overrides "run_name = ${model_name}_${lr_v}, warmup_ratio = 0.2, pretrain_tasks = ${task}, target_tasks = ${task}, lr=${lr_v}e-5, batch_size=4, target_train_max_vals = 400, few_shot = -1, max_epochs = 20, pooler_dropout = 0, pool_type=proj_avg_train, random_seed = ${seed}, run_name_suffix = adam_warmup02_proj_avg_train_correct_e20_bsz4:s${seed}:lr" -c superglue-bert.conf
            python -m olfmlm.evaluate.main --exp_name $exp_name --overrides "run_name = ${model_name}_${lr_v}, $common_para pretrain_tasks = ${task}, target_tasks = ${task}, lr=${lr_v}e-5, batch_size=4, target_train_max_vals = 400, few_shot = -1, max_epochs = 20, pooler_dropout = 0, random_seed = ${seed}, run_name_suffix = adam_${common_name}_e20_bsz4:s${seed}:lr" -c superglue-bert.conf
            #python -m olfmlm.evaluate.main --exp_name $exp_name --overrides "run_name = ${model_name}_${lr_v}, pretrain_tasks = ${task}, target_tasks = ${task}, lr=${lr_v}e-5, batch_size=4, target_train_max_vals = 400, few_shot = -1, max_epochs = 20, pooler_dropout = 0, pool_type=proj_avg_train, random_seed = ${seed}, run_name_suffix = adam_warmup01_proj_avg_train_correct_e20:s${seed}:lr" -c superglue-bert.conf
            #python -m olfmlm.evaluate.main --exp_name $exp_name --overrides "run_name = ${model_name}_${lr_v}, pretrain_tasks = ${task}, target_tasks = ${task}, lr=${lr_v}e-5, batch_size=4, target_train_max_vals = 400, few_shot = -1, max_epochs = 20, pooler_dropout = 0, pool_type=proj_avg_train_skip, random_seed = ${seed}, run_name_suffix = adam_warmup01_proj_avg_train_correct_e20_skip:s${seed}:lr" -c superglue-bert.conf
            #python -m olfmlm.evaluate.main --exp_name $exp_name --overrides "run_name = ${model_name}_${lr_v}, pretrain_tasks = ${task}, target_tasks = ${task}, lr=${lr_v}e-5, batch_size=4, target_train_max_vals = 400, few_shot = -1, max_epochs = 20, pooler_dropout = 0, pool_type=lin, random_seed = ${seed}, run_name_suffix = adam_warmup01_lin_e20:s${seed}:lr" -c superglue-bert.conf
            #python -m olfmlm.evaluate.main --exp_name $exp_name --overrides "run_name = ${model_name}_${lr_v}, pretrain_tasks = ${task}, target_tasks = ${task}, lr=${lr_v}e-5, batch_size=4, target_train_max_vals = 400, few_shot = -1, max_epochs = 20, pooler_dropout = 0, pool_type=facet_mean, random_seed = ${seed}, run_name_suffix = adam_warmup01_mean_e20:s${seed}:lr" -c superglue-bert.conf
            #python -m olfmlm.evaluate.main --exp_name $exp_name --overrides "run_name = ${model_name}_${lr_v}, pretrain_tasks = ${task}, target_tasks = ${task}, lr=${lr_v}e-5, batch_size=4, target_train_max_vals = 400, few_shot = -1, max_epochs = 20, pooler_dropout = 0, pool_type=first_init_avg, random_seed = ${seed}, run_name_suffix = adam_warmup01_pdrop0_avg_e20:s${seed}:lr" -c superglue-bert.conf
        fi
    done
#python -m olfmlm.evaluate.main --exp_name $exp_name --overrides "run_name = "${1}_3", lr=2e-5, few_shot = -1, batch_size=4, max_epochs = 20, random_seed = 1020, pooler_dropout = 1, pooler_scalar_dropout = 0.0, run_name_suffix = drop00_e20_bsz4_s1k2" -c superglue-bert.conf
#python -m olfmlm.evaluate.main --exp_name $exp_name --overrides "run_name = "${1}_4", lr=1e-5, few_shot = -1, batch_size=4, max_epochs = 20, random_seed = 1020, pooler_dropout = 1, pooler_scalar_dropout = 0.0, run_name_suffix = drop00_e20_bsz4_s1k2" -c superglue-bert.conf
#python -m olfmlm.evaluate.main --exp_name $exp_name --overrides "run_name = "${1}_2", lr=3e-5, few_shot = -1, batch_size=4, max_epochs = 20, random_seed = 1020, pooler_dropout = 1, pooler_scalar_dropout = 0.0, run_name_suffix = drop00_e20_bsz4_s1k2" -c superglue-bert.conf
#python -m olfmlm.evaluate.main --exp_name $exp_name --overrides "run_name = "${1}_1", lr=5e-5, few_shot = -1, batch_size=4, max_epochs = 20, random_seed = 1020, pooler_dropout = 1, pooler_scalar_dropout = 0.0, run_name_suffix = drop00_e20_bsz4_s1k2" -c superglue-bert.conf

elif [[ "$exp_name" == "mf+mlm_super_glue_few" ]]; then
    for lr_v in "${lr_array[@]}"
    do
        #python -m olfmlm.evaluate.main --exp_name $exp_name --overrides "run_name = ${model_name}_${lr_v}, pretrain_tasks = ${task}, target_tasks = ${task}, lr=${lr_v}e-5, batch_size=4, few_shot = 1000, max_epochs = 20, pooler_dropout = 0, pool_type=first_init, random_seed = ${seed}, run_name_suffix = adam_warmup01_pdrop0_e20:s${seed}:lr" -c superglue-bert.conf
        #python -m olfmlm.evaluate.main --exp_name $exp_name --overrides "run_name = ${model_name}_${lr_v}, pretrain_tasks = ${task}, target_tasks = ${task}, lr=${lr_v}e-5, batch_size=4, few_shot = 1000, max_epochs = 20, pooler_dropout = 1, pool_type=first_init, random_seed = ${seed}, run_name_suffix = adam_warmup01_pdrop1_e20:s${seed}:lr" -c superglue-bert.conf
        #python -m olfmlm.evaluate.main --exp_name $exp_name --overrides "run_name = ${model_name}_${lr_v}, pretrain_tasks = ${task}, target_tasks = ${task}, lr=${lr_v}e-5, batch_size=4, few_shot = 1000, max_epochs = 20, pooler_dropout = 0, pool_type=first, random_seed = ${seed}, run_name_suffix = adam_warmup01_first_e20:s${seed}:lr" -c superglue-bert.conf
        #python -m olfmlm.evaluate.main --exp_name $exp_name --checkpoint 1 --overrides "run_name = ${model_name}_${lr_v}, pretrain_tasks = ${task}, target_tasks = ${task}, lr=${lr_v}e-5, batch_size=4, few_shot = 1000, max_epochs = 20, pooler_dropout = 0, pool_type=proj_avg_train, random_seed = ${seed}, run_name_suffix = adam_warmup01_proj_avg_train_correct_e20_ck1:s${seed}:lr" -c superglue-bert.conf
        #python -m olfmlm.evaluate.main --exp_name $exp_name --overrides "run_name = ${model_name}_${lr_v}, warmup_ratio = 0.3, pretrain_tasks = ${task}, target_tasks = ${task}, lr=${lr_v}e-5, batch_size=8, few_shot = 1000, max_epochs = 20, pooler_dropout = 0, pool_type=proj_avg_train, random_seed = ${seed}, run_name_suffix = adam_warmup03_proj_avg_train_correct_e20_bsz8:s${seed}:lr" -c superglue-bert.conf
        #python -m olfmlm.evaluate.main --exp_name $exp_name --overrides "run_name = ${model_name}_${lr_v}, warmup_ratio = 0.2, pretrain_tasks = ${task}, target_tasks = ${task}, lr=${lr_v}e-5, batch_size=4, few_shot = 1000, max_epochs = 20, pooler_dropout = 0, pool_type=proj_avg_train, random_seed = ${seed}, run_name_suffix = adam_warmup02_proj_avg_train_correct_e20:s${seed}:lr" -c superglue-bert.conf
        python -m olfmlm.evaluate.main --exp_name $exp_name --overrides "run_name = ${model_name}_${lr_v}, $common_para pretrain_tasks = ${task}, target_tasks = ${task}, lr=${lr_v}e-5, batch_size=4, few_shot = 1000, max_epochs = 20, pooler_dropout = 0, random_seed = ${seed}, run_name_suffix = adam_${common_name}_e20:s${seed}:lr" -c superglue-bert.conf
        #python -m olfmlm.evaluate.main --exp_name $exp_name --overrides "run_name = ${model_name}_${lr_v}, pretrain_tasks = ${task}, target_tasks = ${task}, lr=${lr_v}e-5, batch_size=4, few_shot = 1000, max_epochs = 20, pooler_dropout = 0, pool_type=proj_avg_train, random_seed = ${seed}, run_name_suffix = adam_warmup01_proj_avg_train_correct_e20:s${seed}:lr" -c superglue-bert.conf
        #python -m olfmlm.evaluate.main --exp_name $exp_name --overrides "run_name = ${model_name}_${lr_v}, pretrain_tasks = ${task}, target_tasks = ${task}, lr=${lr_v}e-5, batch_size=4, few_shot = 1000, max_epochs = 20, pooler_dropout = 0, pool_type=proj_avg_train_skip, random_seed = ${seed}, run_name_suffix = adam_warmup01_proj_avg_train_correct_e20_skip:s${seed}:lr" -c superglue-bert.conf
        #python -m olfmlm.evaluate.main --exp_name $exp_name --overrides "run_name = ${model_name}_${lr_v}, pretrain_tasks = ${task}, target_tasks = ${task}, lr=${lr_v}e-5, batch_size=4, few_shot = 1000, max_epochs = 20, pooler_dropout = 0, pool_type=lin, random_seed = ${seed}, run_name_suffix = adam_warmup01_lin_e20:s${seed}:lr" -c superglue-bert.conf
        #python -m olfmlm.evaluate.main --exp_name $exp_name --overrides "run_name = ${model_name}_${lr_v}, pretrain_tasks = ${task}, target_tasks = ${task}, lr=${lr_v}e-5, batch_size=4, few_shot = 1000, max_epochs = 20, pooler_dropout = 0, pool_type=facet_mean, random_seed = ${seed}, run_name_suffix = adam_warmup01_mean_e20:s${seed}:lr" -c superglue-bert.conf
        #python -m olfmlm.evaluate.main --exp_name $exp_name --overrides "run_name = ${model_name}_${lr_v}, pretrain_tasks = ${task}, target_tasks = ${task}, lr=${lr_v}e-5, batch_size=4, few_shot = 1000, max_epochs = 20, pooler_dropout = 0, pool_type=first_init_avg, random_seed = ${seed}, run_name_suffix = adam_warmup01_pdrop0_avg_e20:s${seed}:lr" -c superglue-bert.conf
    done

elif [[ "$exp_name" == "mf+mlm_super_glue_few_100_ry" ]]; then
    for lr_v in "${lr_array[@]}"
    do
        #python -m olfmlm.evaluate.main --exp_name $exp_name --overrides "run_name = ${model_name}_${lr_v}, pretrain_tasks = ${task}, target_tasks = ${task}, lr=${lr_v}e-5, batch_size=4, few_shot = 100, max_epochs = 20, pooler_dropout = 0, pool_type=first_init, random_seed = ${seed}, run_name_suffix = adam_warmup01_pdrop0_e20:s${seed}:lr" -c superglue-bert.conf
        #python -m olfmlm.evaluate.main --exp_name $exp_name --overrides "run_name = ${model_name}_${lr_v}, pretrain_tasks = ${task}, target_tasks = ${task}, lr=${lr_v}e-5, batch_size=4, few_shot = 100, max_epochs = 20, pooler_dropout = 1, pool_type=first_init, random_seed = ${seed}, run_name_suffix = adam_warmup01_pdrop1_e20:s${seed}:lr" -c superglue-bert.conf
        #python -m olfmlm.evaluate.main --exp_name $exp_name --overrides "run_name = ${model_name}_${lr_v}, pretrain_tasks = ${task}, target_tasks = ${task}, lr=${lr_v}e-5, batch_size=4, few_shot = 100, max_epochs = 20, pooler_dropout = 0, pool_type=first, random_seed = ${seed}, run_name_suffix = adam_warmup01_first_e20:s${seed}:lr" -c superglue-bert.conf
        #python -m olfmlm.evaluate.main --exp_name $exp_name --checkpoint 1 --overrides "run_name = ${model_name}_${lr_v}, pretrain_tasks = ${task}, target_tasks = ${task}, lr=${lr_v}e-5, batch_size=4, few_shot = 100, max_epochs = 20, pooler_dropout = 0, pool_type=proj_avg_train, random_seed = ${seed}, run_name_suffix = adam_warmup01_proj_avg_train_correct_e20_ck1:s${seed}:lr" -c superglue-bert.conf
        #python -m olfmlm.evaluate.main --exp_name $exp_name --overrides "run_name = ${model_name}_${lr_v}, warmup_ratio = 0.3, pretrain_tasks = ${task}, target_tasks = ${task}, lr=${lr_v}e-5, batch_size=8, few_shot = 100, max_epochs = 20, pooler_dropout = 0, pool_type=proj_avg_train, random_seed = ${seed}, run_name_suffix = adam_warmup03_proj_avg_train_correct_e20_bz8:s${seed}:lr" -c superglue-bert.conf
        #python -m olfmlm.evaluate.main --exp_name $exp_name --overrides "run_name = ${model_name}_${lr_v}, warmup_ratio = 0.2, pretrain_tasks = ${task}, target_tasks = ${task}, lr=${lr_v}e-5, batch_size=4, few_shot = 100, max_epochs = 20, pooler_dropout = 0, pool_type=proj_avg_train, random_seed = ${seed}, run_name_suffix = adam_warmup02_proj_avg_train_correct_e20:s${seed}:lr" -c superglue-bert.conf
        python -m olfmlm.evaluate.main --exp_name $exp_name --overrides "run_name = ${model_name}_${lr_v}, $common_para pretrain_tasks = ${task}, target_tasks = ${task}, lr=${lr_v}e-5, batch_size=4, few_shot = 100, max_epochs = 20, pooler_dropout = 0, random_seed = ${seed}, run_name_suffix = adam_${common_name}_e20:s${seed}:lr" -c superglue-bert.conf
        #python -m olfmlm.evaluate.main --exp_name $exp_name --overrides "run_name = ${model_name}_${lr_v}, pretrain_tasks = ${task}, target_tasks = ${task}, lr=${lr_v}e-5, batch_size=4, few_shot = 100, max_epochs = 20, pooler_dropout = 0, pool_type=proj_avg_train, random_seed = ${seed}, run_name_suffix = adam_warmup01_proj_avg_train_correct_e20:s${seed}:lr" -c superglue-bert.conf
        #python -m olfmlm.evaluate.main --exp_name $exp_name --overrides "run_name = ${model_name}_${lr_v}, pretrain_tasks = ${task}, target_tasks = ${task}, lr=${lr_v}e-5, batch_size=4, few_shot = 100, max_epochs = 20, pooler_dropout = 0, pool_type=proj_avg_train_skip, random_seed = ${seed}, run_name_suffix = adam_warmup01_proj_avg_train_correct_e20_skip:s${seed}:lr" -c superglue-bert.conf
        #python -m olfmlm.evaluate.main --exp_name $exp_name --overrides "run_name = ${model_name}_${lr_v}, pretrain_tasks = ${task}, target_tasks = ${task}, lr=${lr_v}e-5, batch_size=4, few_shot = 100, max_epochs = 20, pooler_dropout = 0, pool_type=lin, random_seed = ${seed}, run_name_suffix = adam_warmup01_lin_e20:s${seed}:lr" -c superglue-bert.conf
        #python -m olfmlm.evaluate.main --exp_name $exp_name --overrides "run_name = ${model_name}_${lr_v}, pretrain_tasks = ${task}, target_tasks = ${task}, lr=${lr_v}e-5, batch_size=4, few_shot = 100, max_epochs = 20, pooler_dropout = 0, pool_type=facet_mean, random_seed = ${seed}, run_name_suffix = adam_warmup01_mean_e20:s${seed}:lr" -c superglue-bert.conf
        #python -m olfmlm.evaluate.main --exp_name $exp_name --overrides "run_name = ${model_name}_${lr_v}, pretrain_tasks = ${task}, target_tasks = ${task}, lr=${lr_v}e-5, batch_size=4, few_shot = 100, max_epochs = 20, pooler_dropout = 0, pool_type=first_init_avg, random_seed = ${seed}, run_name_suffix = adam_warmup01_pdrop0_avg_e20:s${seed}:lr" -c superglue-bert.conf
    done


#python -m olfmlm.evaluate.main --exp_name $exp_name --overrides "run_name = "${1}_4", lr=1e-5, few_shot = 1000, max_epochs = 40, pooler_dropout = 1, pooler_scalar_dropout = 0.3" -c superglue-bert.conf
#python -m olfmlm.evaluate.main --exp_name $exp_name --overrides "run_name = "${1}_3", lr=2e-5, few_shot = 1000, max_epochs = 40, pooler_dropout = 1, pooler_scalar_dropout = 0.3" -c superglue-bert.conf
#python -m olfmlm.evaluate.main --exp_name $exp_name --overrides "run_name = "${1}_2", lr=3e-5, few_shot = 1000, max_epochs = 40, pooler_dropout = 1, pooler_scalar_dropout = 0.3" -c superglue-bert.conf
#python -m olfmlm.evaluate.main --exp_name $exp_name --overrides "run_name = "${1}_1", lr=5e-5, few_shot = 1000, max_epochs = 40, pooler_dropout = 1, pooler_scalar_dropout = 0.3" -c superglue-bert.conf

#python -m olfmlm.evaluate.main --exp_name $exp_name --overrides "run_name = "${1}_3", lr=2e-5, few_shot = 1000, max_epochs = 40, pooler_dropout = 1, run_name_suffix = no_drop" -c superglue-bert.conf
#python -m olfmlm.evaluate.main --exp_name $exp_name --overrides "run_name = "${1}_2", lr=3e-5, few_shot = 1000, max_epochs = 40, pooler_dropout = 1, run_name_suffix = no_drop" -c superglue-bert.conf
#python -m olfmlm.evaluate.main --exp_name $exp_name --overrides "run_name = "${1}_1", lr=5e-5, few_shot = 1000, max_epochs = 40, pooler_dropout = 1, run_name_suffix = no_drop" -c superglue-bert.conf
elif [[ "$exp_name" == "mf+mlm_few_100_ry" ]]; then
    for lr_v in "${lr_array[@]}"
    do
        #python -m olfmlm.evaluate.main --exp_name $exp_name --overrides "run_name = ${model_name}_${lr_v}, pretrain_tasks = ${task}, target_tasks = ${task}, lr=${lr_v}e-5, batch_size=4, few_shot = 100, max_epochs = 20, pooler_dropout = 0, pool_type=first_init, random_seed = ${seed}, run_name_suffix = adam_warmup01_pdrop0_e20:s${seed}:lr"
        #python -m olfmlm.evaluate.main --exp_name $exp_name --overrides "run_name = ${model_name}_${lr_v}, pretrain_tasks = ${task}, target_tasks = ${task}, lr=${lr_v}e-5, batch_size=4, few_shot = 100, max_epochs = 20, pooler_dropout = 1, pool_type=first_init, random_seed = ${seed}, run_name_suffix = adam_warmup01_pdrop1_e20:s${seed}:lr"
        #python -m olfmlm.evaluate.main --exp_name $exp_name --overrides "run_name = ${model_name}_${lr_v}, pretrain_tasks = ${task}, target_tasks = ${task}, lr=${lr_v}e-5, batch_size=4, few_shot = 100, max_epochs = 20, pooler_dropout = 0, pool_type=first, random_seed = ${seed}, run_name_suffix = adam_warmup01_first_e20:s${seed}:lr"
        #python -m olfmlm.evaluate.main --exp_name $exp_name --checkpoint 1 --overrides "run_name = ${model_name}_${lr_v}, pretrain_tasks = ${task}, target_tasks = ${task}, lr=${lr_v}e-5, batch_size=4, few_shot = 100, max_epochs = 20, pooler_dropout = 0, pool_type=proj_avg_train, random_seed = ${seed}, run_name_suffix = adam_warmup01_proj_avg_train_correct_e20_ck1:s${seed}:lr"
        #python -m olfmlm.evaluate.main --exp_name $exp_name --overrides "run_name = ${model_name}_${lr_v}, warmup_ratio = 0.2, pretrain_tasks = ${task}, target_tasks = ${task}, lr=${lr_v}e-5, batch_size=4, few_shot = 100, max_epochs = 20, pooler_dropout = 0, pool_type=proj_avg_train, random_seed = ${seed}, run_name_suffix = adam_warmup02_proj_avg_train_correct_e20_bsz4:s${seed}:lr"
        python -m olfmlm.evaluate.main --exp_name $exp_name --overrides "run_name = ${model_name}_${lr_v}, $common_para pretrain_tasks = ${task}, target_tasks = ${task}, lr=${lr_v}e-5, batch_size=4, few_shot = 100, max_epochs = 20, pooler_dropout = 0, random_seed = ${seed}, run_name_suffix = adam_${common_name}_e20_bsz4:s${seed}:lr"
        #python -m olfmlm.evaluate.main --exp_name $exp_name --overrides "run_name = ${model_name}_${lr_v}, warmup_ratio = 0.2, pretrain_tasks = ${task}, target_tasks = ${task}, lr=${lr_v}e-5, batch_size=4, few_shot = 100, max_epochs = 20, pooler_dropout = 0, pool_type=proj_avg_train, random_seed = ${seed}, run_name_suffix = adam_warmup02_proj_avg_train_correct_e20:s${seed}:lr"
        #python -m olfmlm.evaluate.main --exp_name $exp_name --overrides "run_name = ${model_name}_${lr_v}, pretrain_tasks = ${task}, target_tasks = ${task}, lr=${lr_v}e-5, batch_size=4, few_shot = 100, max_epochs = 20, pooler_dropout = 0, pool_type=proj_avg_train, random_seed = ${seed}, run_name_suffix = adam_warmup01_proj_avg_train_correct_e20:s${seed}:lr"
        #python -m olfmlm.evaluate.main --exp_name $exp_name --overrides "run_name = ${model_name}_${lr_v}, pretrain_tasks = ${task}, target_tasks = ${task}, lr=${lr_v}e-5, batch_size=4, few_shot = 100, max_epochs = 20, pooler_dropout = 0, pool_type=proj_avg_train_skip, random_seed = ${seed}, run_name_suffix = adam_warmup01_proj_avg_train_correct_e20_skip:s${seed}:lr"
        #python -m olfmlm.evaluate.main --exp_name $exp_name --overrides "run_name = ${model_name}_${lr_v}, pretrain_tasks = ${task}, target_tasks = ${task}, lr=${lr_v}e-5, batch_size=4, few_shot = 100, max_epochs = 20, pooler_dropout = 0, pool_type=lin, random_seed = ${seed}, run_name_suffix = adam_warmup01_lin_e20:s${seed}:lr"
        #python -m olfmlm.evaluate.main --exp_name $exp_name --overrides "run_name = ${model_name}_${lr_v}, pretrain_tasks = ${task}, target_tasks = ${task}, lr=${lr_v}e-5, batch_size=4, few_shot = 100, max_epochs = 20, pooler_dropout = 0, pool_type=facet_mean, random_seed = ${seed}, run_name_suffix = adam_warmup01_mean_e20:s${seed}:lr"
        #python -m olfmlm.evaluate.main --exp_name $exp_name --overrides "run_name = ${model_name}_${lr_v}, pretrain_tasks = ${task}, target_tasks = ${task}, lr=${lr_v}e-5, batch_size=4, few_shot = 100, max_epochs = 20, pooler_dropout = 0, pool_type=first_init_avg, random_seed = ${seed}, run_name_suffix = adam_warmup01_pdrop0_avg_e20:s${seed}:lr"
    done

elif [[ "$exp_name" == "mf+mlm_few_32" ]]; then
    for lr_v in "${lr_array[@]}"
    do
        #python -m olfmlm.evaluate.main --exp_name $exp_name --overrides "run_name = ${model_name}_${lr_v}, pretrain_tasks = ${task}, target_tasks = ${task}, lr=${lr_v}e-5, batch_size=4, few_shot = 32, max_epochs = 20, pooler_dropout = 0, pool_type=first, random_seed = ${seed}, run_name_suffix = adam_warmup01_first_e20:s${seed}:lr"
        #python -m olfmlm.evaluate.main --exp_name $exp_name --checkpoint 1 --overrides "run_name = ${model_name}_${lr_v}, pretrain_tasks = ${task}, target_tasks = ${task}, lr=${lr_v}e-5, batch_size=4, few_shot = 32, max_epochs = 20, pooler_dropout = 0, pool_type=proj_avg_train, random_seed = ${seed}, run_name_suffix = adam_warmup01_proj_avg_train_correct_e20_ck1:s${seed}:lr"
        #python -m olfmlm.evaluate.main --exp_name $exp_name --overrides "run_name = ${model_name}_${lr_v}, warmup_ratio = 0.2, pretrain_tasks = ${task}, target_tasks = ${task}, lr=${lr_v}e-5, batch_size=4, few_shot = 32, max_epochs = 20, pooler_dropout = 0, pool_type=proj_avg_train, random_seed = ${seed}, run_name_suffix = adam_warmup02_proj_avg_train_correct_e20_bsz4:s${seed}:lr"
        python -m olfmlm.evaluate.main --exp_name $exp_name --overrides "run_name = ${model_name}_${lr_v}, $common_para pretrain_tasks = ${task}, target_tasks = ${task}, lr=${lr_v}e-5, batch_size=4, few_shot = 32, max_epochs = 20, pooler_dropout = 0, random_seed = ${seed}, run_name_suffix = adam_${common_name}_e20_bsz4:s${seed}:lr"
        #python -m olfmlm.evaluate.main --exp_name $exp_name --overrides "run_name = ${model_name}_${lr_v}, warmup_ratio = 0.2, pretrain_tasks = ${task}, target_tasks = ${task}, lr=${lr_v}e-5, batch_size=4, few_shot = 32, max_epochs = 20, pooler_dropout = 0, pool_type=proj_avg_train, random_seed = ${seed}, run_name_suffix = adam_warmup02_proj_avg_train_correct_e20:s${seed}:lr"
        #python -m olfmlm.evaluate.main --exp_name $exp_name --overrides "run_name = ${model_name}_${lr_v}, pretrain_tasks = ${task}, target_tasks = ${task}, lr=${lr_v}e-5, batch_size=4, few_shot = 32, max_epochs = 20, pooler_dropout = 0, pool_type=proj_avg_train, random_seed = ${seed}, run_name_suffix = adam_warmup01_proj_avg_train_correct_e20:s${seed}:lr"
        #python -m olfmlm.evaluate.main --exp_name $exp_name --overrides "run_name = ${model_name}_${lr_v}, pretrain_tasks = ${task}, target_tasks = ${task}, lr=${lr_v}e-5, batch_size=4, few_shot = 32, max_epochs = 20, pooler_dropout = 0, pool_type=proj_avg_train_skip, random_seed = ${seed}, run_name_suffix = adam_warmup01_proj_avg_train_correct_e20_skip:s${seed}:lr"
        #python -m olfmlm.evaluate.main --exp_name $exp_name --overrides "run_name = ${model_name}_${lr_v}, pretrain_tasks = ${task}, target_tasks = ${task}, lr=${lr_v}e-5, batch_size=4, few_shot = 32, max_epochs = 20, pooler_dropout = 0, pool_type=lin, random_seed = ${seed}, run_name_suffix = adam_warmup01_lin_e20:s${seed}:lr"
        #python -m olfmlm.evaluate.main --exp_name $exp_name --overrides "run_name = ${model_name}_${lr_v}, pretrain_tasks = ${task}, target_tasks = ${task}, lr=${lr_v}e-5, batch_size=4, few_shot = 32, max_epochs = 20, pooler_dropout = 0, pool_type=facet_mean, random_seed = ${seed}, run_name_suffix = adam_warmup01_mean_e20:s${seed}:lr"
        #python -m olfmlm.evaluate.main --exp_name $exp_name --overrides "run_name = ${model_name}_${lr_v}, pretrain_tasks = ${task}, target_tasks = ${task}, lr=${lr_v}e-5, batch_size=4, few_shot = 32, max_epochs = 20, pooler_dropout = 0, pool_type=first_init_avg, random_seed = ${seed}, run_name_suffix = adam_warmup01_pdrop0_avg_e20:s${seed}:lr"
    done

fi


#python -m olfmlm.evaluate.main --exp_name $exp_name --overrides "run_name = "${1}_4", lr=1e-5, batch_size=16, few_shot = -1, max_epochs = 10, pooler_dropout = 1, run_name_suffix = pdrop1"
#python -m olfmlm.evaluate.main --exp_name $exp_name --overrides "run_name = "${1}_4", lr=1e-5, batch_size=16, few_shot = -1, max_epochs = 20, random_seed = 1000, pooler_dropout = 1, run_name_suffix = pdrop1_ep20_bsz16_s1k, tokenizer = bert-large-uncased, input_module = bert-large-uncased, bert_config_file = olfmlm/bert_large_config.json"
#python -m olfmlm.evaluate.main --exp_name $exp_name --overrides "run_name = "${1}_4", lr=1e-5, batch_size=16, few_shot = -1, max_epochs = 20, pooler_dropout = 1, run_name_suffix = pdrop1_ep20_bsz16, tokenizer = bert-large-uncased, input_module = bert-large-uncased, bert_config_file = olfmlm/bert_large_config.json"
#python -m olfmlm.evaluate.main --exp_name $exp_name --overrides "run_name = "${1}_4", lr=1e-5, batch_size=24, few_shot = -1, max_epochs = 10, pooler_dropout = 1, run_name_suffix = pdrop1, tokenizer = bert-large-uncased, input_module = bert-large-uncased, bert_config_file = olfmlm/bert_large_config.json"
#python -m olfmlm.evaluate.main --exp_name $exp_name --overrides "run_name = "${1}_3", lr=2e-5, batch_size=24, few_shot = -1, max_epochs = 10, pooler_dropout = 1, run_name_suffix = pdrop1, tokenizer = bert-large-uncased, input_module = bert-large-uncased, bert_config_file = olfmlm/bert_large_config.json"
#python -m olfmlm.evaluate.main --exp_name $exp_name --overrides "run_name = "${1}_2", lr=3e-5, batch_size=16, few_shot = -1, max_epochs = 10, pooler_dropout = 1, run_name_suffix = pdrop1"


#python -m olfmlm.evaluate.main --exp_name $exp_name --overrides "run_name = "${1}_3", run_name_suffix=_analyze, lr=2e-5, batch_size=16, few_shot = -1,  pooler_dropout = 1, pooler_scalar_dropout = 0.3, write_preds=val, write_strict_glue_format = 0, analyze_grad = 1"

#exp_name="mf+mlm_super_glue"


#exp_name="mf+mlm_super_glue_few"

#exp_name="mf+mlm_few_100_ry"

#python -m olfmlm.evaluate.main --exp_name $exp_name --overrides "run_name = "${1}_3", lr=2e-5, batch_size=8, max_epochs = 100, few_shot = 100, pooler_dropout = 1"
#python -m olfmlm.evaluate.main --exp_name $exp_name --overrides "run_name = "${1}_2", lr=3e-5, batch_size=8, max_epochs = 100, few_shot = 100, pooler_dropout = 1"
#python -m olfmlm.evaluate.main --exp_name $exp_name --overrides "run_name = "${1}_1", lr=5e-5, batch_size=8, max_epochs = 100, few_shot = 100, pooler_dropout = 1"



